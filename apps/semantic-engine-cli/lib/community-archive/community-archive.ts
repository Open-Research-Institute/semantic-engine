/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** OpenAPI description (this document) */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/mentioned_users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    user_id?: string;
                    name?: string;
                    screen_name?: string;
                    updated_at?: string;
                    /** @description Filtering Columns */
                    select?: string;
                    /** @description Ordering */
                    order?: string;
                    /** @description Limiting and Pagination */
                    offset?: string;
                    /** @description Limiting and Pagination */
                    limit?: string;
                };
                header?: {
                    /** @description Limiting and Pagination */
                    Range?: string;
                    /** @description Limiting and Pagination */
                    "Range-Unit"?: string;
                    /** @description Preference */
                    Prefer?: "count=none";
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["mentioned_users"][];
                        "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["mentioned_users"][];
                        "application/vnd.pgrst.object+json": components["schemas"]["mentioned_users"][];
                        "text/csv": components["schemas"]["mentioned_users"][];
                    };
                };
                /** @description Partial Content */
                206: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: {
                    /** @description Filtering Columns */
                    select?: string;
                };
                header?: {
                    /** @description Preference */
                    Prefer?: "return=representation" | "return=minimal" | "return=none" | "resolution=ignore-duplicates" | "resolution=merge-duplicates";
                };
                path?: never;
                cookie?: never;
            };
            /** @description mentioned_users */
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["mentioned_users"];
                    "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["mentioned_users"];
                    "application/vnd.pgrst.object+json": components["schemas"]["mentioned_users"];
                    "text/csv": components["schemas"]["mentioned_users"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete: {
            parameters: {
                query?: {
                    user_id?: string;
                    name?: string;
                    screen_name?: string;
                    updated_at?: string;
                };
                header?: {
                    /** @description Preference */
                    Prefer?: "return=representation" | "return=minimal" | "return=none";
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: {
                    user_id?: string;
                    name?: string;
                    screen_name?: string;
                    updated_at?: string;
                };
                header?: {
                    /** @description Preference */
                    Prefer?: "return=representation" | "return=minimal" | "return=none";
                };
                path?: never;
                cookie?: never;
            };
            /** @description mentioned_users */
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["mentioned_users"];
                    "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["mentioned_users"];
                    "application/vnd.pgrst.object+json": components["schemas"]["mentioned_users"];
                    "text/csv": components["schemas"]["mentioned_users"];
                };
            };
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/tweet_urls": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    id?: string;
                    url?: string;
                    expanded_url?: string;
                    display_url?: string;
                    tweet_id?: string;
                    /** @description Filtering Columns */
                    select?: string;
                    /** @description Ordering */
                    order?: string;
                    /** @description Limiting and Pagination */
                    offset?: string;
                    /** @description Limiting and Pagination */
                    limit?: string;
                };
                header?: {
                    /** @description Limiting and Pagination */
                    Range?: string;
                    /** @description Limiting and Pagination */
                    "Range-Unit"?: string;
                    /** @description Preference */
                    Prefer?: "count=none";
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["tweet_urls"][];
                        "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["tweet_urls"][];
                        "application/vnd.pgrst.object+json": components["schemas"]["tweet_urls"][];
                        "text/csv": components["schemas"]["tweet_urls"][];
                    };
                };
                /** @description Partial Content */
                206: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: {
                    /** @description Filtering Columns */
                    select?: string;
                };
                header?: {
                    /** @description Preference */
                    Prefer?: "return=representation" | "return=minimal" | "return=none" | "resolution=ignore-duplicates" | "resolution=merge-duplicates";
                };
                path?: never;
                cookie?: never;
            };
            /** @description tweet_urls */
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["tweet_urls"];
                    "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["tweet_urls"];
                    "application/vnd.pgrst.object+json": components["schemas"]["tweet_urls"];
                    "text/csv": components["schemas"]["tweet_urls"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete: {
            parameters: {
                query?: {
                    id?: string;
                    url?: string;
                    expanded_url?: string;
                    display_url?: string;
                    tweet_id?: string;
                };
                header?: {
                    /** @description Preference */
                    Prefer?: "return=representation" | "return=minimal" | "return=none";
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: {
                    id?: string;
                    url?: string;
                    expanded_url?: string;
                    display_url?: string;
                    tweet_id?: string;
                };
                header?: {
                    /** @description Preference */
                    Prefer?: "return=representation" | "return=minimal" | "return=none";
                };
                path?: never;
                cookie?: never;
            };
            /** @description tweet_urls */
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["tweet_urls"];
                    "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["tweet_urls"];
                    "application/vnd.pgrst.object+json": components["schemas"]["tweet_urls"];
                    "text/csv": components["schemas"]["tweet_urls"];
                };
            };
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/followers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    id?: string;
                    account_id?: string;
                    follower_account_id?: string;
                    archive_upload_id?: string;
                    /** @description Filtering Columns */
                    select?: string;
                    /** @description Ordering */
                    order?: string;
                    /** @description Limiting and Pagination */
                    offset?: string;
                    /** @description Limiting and Pagination */
                    limit?: string;
                };
                header?: {
                    /** @description Limiting and Pagination */
                    Range?: string;
                    /** @description Limiting and Pagination */
                    "Range-Unit"?: string;
                    /** @description Preference */
                    Prefer?: "count=none";
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["followers"][];
                        "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["followers"][];
                        "application/vnd.pgrst.object+json": components["schemas"]["followers"][];
                        "text/csv": components["schemas"]["followers"][];
                    };
                };
                /** @description Partial Content */
                206: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: {
                    /** @description Filtering Columns */
                    select?: string;
                };
                header?: {
                    /** @description Preference */
                    Prefer?: "return=representation" | "return=minimal" | "return=none" | "resolution=ignore-duplicates" | "resolution=merge-duplicates";
                };
                path?: never;
                cookie?: never;
            };
            /** @description followers */
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["followers"];
                    "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["followers"];
                    "application/vnd.pgrst.object+json": components["schemas"]["followers"];
                    "text/csv": components["schemas"]["followers"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete: {
            parameters: {
                query?: {
                    id?: string;
                    account_id?: string;
                    follower_account_id?: string;
                    archive_upload_id?: string;
                };
                header?: {
                    /** @description Preference */
                    Prefer?: "return=representation" | "return=minimal" | "return=none";
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: {
                    id?: string;
                    account_id?: string;
                    follower_account_id?: string;
                    archive_upload_id?: string;
                };
                header?: {
                    /** @description Preference */
                    Prefer?: "return=representation" | "return=minimal" | "return=none";
                };
                path?: never;
                cookie?: never;
            };
            /** @description followers */
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["followers"];
                    "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["followers"];
                    "application/vnd.pgrst.object+json": components["schemas"]["followers"];
                    "text/csv": components["schemas"]["followers"];
                };
            };
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/archive_upload": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Stores upload options for each archive upload */
        get: {
            parameters: {
                query?: {
                    id?: string;
                    account_id?: string;
                    archive_at?: string;
                    created_at?: string;
                    keep_private?: string;
                    upload_likes?: string;
                    start_date?: string;
                    end_date?: string;
                    upload_phase?: string;
                    /** @description Filtering Columns */
                    select?: string;
                    /** @description Ordering */
                    order?: string;
                    /** @description Limiting and Pagination */
                    offset?: string;
                    /** @description Limiting and Pagination */
                    limit?: string;
                };
                header?: {
                    /** @description Limiting and Pagination */
                    Range?: string;
                    /** @description Limiting and Pagination */
                    "Range-Unit"?: string;
                    /** @description Preference */
                    Prefer?: "count=none";
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["archive_upload"][];
                        "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["archive_upload"][];
                        "application/vnd.pgrst.object+json": components["schemas"]["archive_upload"][];
                        "text/csv": components["schemas"]["archive_upload"][];
                    };
                };
                /** @description Partial Content */
                206: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        /** Stores upload options for each archive upload */
        post: {
            parameters: {
                query?: {
                    /** @description Filtering Columns */
                    select?: string;
                };
                header?: {
                    /** @description Preference */
                    Prefer?: "return=representation" | "return=minimal" | "return=none" | "resolution=ignore-duplicates" | "resolution=merge-duplicates";
                };
                path?: never;
                cookie?: never;
            };
            /** @description archive_upload */
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["archive_upload"];
                    "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["archive_upload"];
                    "application/vnd.pgrst.object+json": components["schemas"]["archive_upload"];
                    "text/csv": components["schemas"]["archive_upload"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        /** Stores upload options for each archive upload */
        delete: {
            parameters: {
                query?: {
                    id?: string;
                    account_id?: string;
                    archive_at?: string;
                    created_at?: string;
                    keep_private?: string;
                    upload_likes?: string;
                    start_date?: string;
                    end_date?: string;
                    upload_phase?: string;
                };
                header?: {
                    /** @description Preference */
                    Prefer?: "return=representation" | "return=minimal" | "return=none";
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        /** Stores upload options for each archive upload */
        patch: {
            parameters: {
                query?: {
                    id?: string;
                    account_id?: string;
                    archive_at?: string;
                    created_at?: string;
                    keep_private?: string;
                    upload_likes?: string;
                    start_date?: string;
                    end_date?: string;
                    upload_phase?: string;
                };
                header?: {
                    /** @description Preference */
                    Prefer?: "return=representation" | "return=minimal" | "return=none";
                };
                path?: never;
                cookie?: never;
            };
            /** @description archive_upload */
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["archive_upload"];
                    "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["archive_upload"];
                    "application/vnd.pgrst.object+json": components["schemas"]["archive_upload"];
                    "text/csv": components["schemas"]["archive_upload"];
                };
            };
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/tweet_replies_view": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    reply_to_tweet_id?: string;
                    reply_to_user_id?: string;
                    /** @description Filtering Columns */
                    select?: string;
                    /** @description Ordering */
                    order?: string;
                    /** @description Limiting and Pagination */
                    offset?: string;
                    /** @description Limiting and Pagination */
                    limit?: string;
                };
                header?: {
                    /** @description Limiting and Pagination */
                    Range?: string;
                    /** @description Limiting and Pagination */
                    "Range-Unit"?: string;
                    /** @description Preference */
                    Prefer?: "count=none";
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["tweet_replies_view"][];
                        "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["tweet_replies_view"][];
                        "application/vnd.pgrst.object+json": components["schemas"]["tweet_replies_view"][];
                        "text/csv": components["schemas"]["tweet_replies_view"][];
                    };
                };
                /** @description Partial Content */
                206: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: {
                    /** @description Filtering Columns */
                    select?: string;
                };
                header?: {
                    /** @description Preference */
                    Prefer?: "return=representation" | "return=minimal" | "return=none" | "resolution=ignore-duplicates" | "resolution=merge-duplicates";
                };
                path?: never;
                cookie?: never;
            };
            /** @description tweet_replies_view */
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["tweet_replies_view"];
                    "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["tweet_replies_view"];
                    "application/vnd.pgrst.object+json": components["schemas"]["tweet_replies_view"];
                    "text/csv": components["schemas"]["tweet_replies_view"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete: {
            parameters: {
                query?: {
                    reply_to_tweet_id?: string;
                    reply_to_user_id?: string;
                };
                header?: {
                    /** @description Preference */
                    Prefer?: "return=representation" | "return=minimal" | "return=none";
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: {
                    reply_to_tweet_id?: string;
                    reply_to_user_id?: string;
                };
                header?: {
                    /** @description Preference */
                    Prefer?: "return=representation" | "return=minimal" | "return=none";
                };
                path?: never;
                cookie?: never;
            };
            /** @description tweet_replies_view */
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["tweet_replies_view"];
                    "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["tweet_replies_view"];
                    "application/vnd.pgrst.object+json": components["schemas"]["tweet_replies_view"];
                    "text/csv": components["schemas"]["tweet_replies_view"];
                };
            };
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/liked_tweets": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    tweet_id?: string;
                    full_text?: string;
                    fts?: string;
                    /** @description Filtering Columns */
                    select?: string;
                    /** @description Ordering */
                    order?: string;
                    /** @description Limiting and Pagination */
                    offset?: string;
                    /** @description Limiting and Pagination */
                    limit?: string;
                };
                header?: {
                    /** @description Limiting and Pagination */
                    Range?: string;
                    /** @description Limiting and Pagination */
                    "Range-Unit"?: string;
                    /** @description Preference */
                    Prefer?: "count=none";
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["liked_tweets"][];
                        "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["liked_tweets"][];
                        "application/vnd.pgrst.object+json": components["schemas"]["liked_tweets"][];
                        "text/csv": components["schemas"]["liked_tweets"][];
                    };
                };
                /** @description Partial Content */
                206: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: {
                    /** @description Filtering Columns */
                    select?: string;
                };
                header?: {
                    /** @description Preference */
                    Prefer?: "return=representation" | "return=minimal" | "return=none" | "resolution=ignore-duplicates" | "resolution=merge-duplicates";
                };
                path?: never;
                cookie?: never;
            };
            /** @description liked_tweets */
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["liked_tweets"];
                    "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["liked_tweets"];
                    "application/vnd.pgrst.object+json": components["schemas"]["liked_tweets"];
                    "text/csv": components["schemas"]["liked_tweets"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete: {
            parameters: {
                query?: {
                    tweet_id?: string;
                    full_text?: string;
                    fts?: string;
                };
                header?: {
                    /** @description Preference */
                    Prefer?: "return=representation" | "return=minimal" | "return=none";
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: {
                    tweet_id?: string;
                    full_text?: string;
                    fts?: string;
                };
                header?: {
                    /** @description Preference */
                    Prefer?: "return=representation" | "return=minimal" | "return=none";
                };
                path?: never;
                cookie?: never;
            };
            /** @description liked_tweets */
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["liked_tweets"];
                    "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["liked_tweets"];
                    "application/vnd.pgrst.object+json": components["schemas"]["liked_tweets"];
                    "text/csv": components["schemas"]["liked_tweets"];
                };
            };
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/following": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    id?: string;
                    account_id?: string;
                    following_account_id?: string;
                    archive_upload_id?: string;
                    /** @description Filtering Columns */
                    select?: string;
                    /** @description Ordering */
                    order?: string;
                    /** @description Limiting and Pagination */
                    offset?: string;
                    /** @description Limiting and Pagination */
                    limit?: string;
                };
                header?: {
                    /** @description Limiting and Pagination */
                    Range?: string;
                    /** @description Limiting and Pagination */
                    "Range-Unit"?: string;
                    /** @description Preference */
                    Prefer?: "count=none";
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["following"][];
                        "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["following"][];
                        "application/vnd.pgrst.object+json": components["schemas"]["following"][];
                        "text/csv": components["schemas"]["following"][];
                    };
                };
                /** @description Partial Content */
                206: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: {
                    /** @description Filtering Columns */
                    select?: string;
                };
                header?: {
                    /** @description Preference */
                    Prefer?: "return=representation" | "return=minimal" | "return=none" | "resolution=ignore-duplicates" | "resolution=merge-duplicates";
                };
                path?: never;
                cookie?: never;
            };
            /** @description following */
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["following"];
                    "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["following"];
                    "application/vnd.pgrst.object+json": components["schemas"]["following"];
                    "text/csv": components["schemas"]["following"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete: {
            parameters: {
                query?: {
                    id?: string;
                    account_id?: string;
                    following_account_id?: string;
                    archive_upload_id?: string;
                };
                header?: {
                    /** @description Preference */
                    Prefer?: "return=representation" | "return=minimal" | "return=none";
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: {
                    id?: string;
                    account_id?: string;
                    following_account_id?: string;
                    archive_upload_id?: string;
                };
                header?: {
                    /** @description Preference */
                    Prefer?: "return=representation" | "return=minimal" | "return=none";
                };
                path?: never;
                cookie?: never;
            };
            /** @description following */
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["following"];
                    "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["following"];
                    "application/vnd.pgrst.object+json": components["schemas"]["following"];
                    "text/csv": components["schemas"]["following"];
                };
            };
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/account_activity_summary": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    account_id?: string;
                    username?: string;
                    num_tweets?: string;
                    num_followers?: string;
                    total_likes?: string;
                    total_mentions?: string;
                    mentioned_accounts?: string;
                    most_retweeted_tweets?: string;
                    most_favorited_tweets?: string;
                    last_updated?: string;
                    /** @description Filtering Columns */
                    select?: string;
                    /** @description Ordering */
                    order?: string;
                    /** @description Limiting and Pagination */
                    offset?: string;
                    /** @description Limiting and Pagination */
                    limit?: string;
                };
                header?: {
                    /** @description Limiting and Pagination */
                    Range?: string;
                    /** @description Limiting and Pagination */
                    "Range-Unit"?: string;
                    /** @description Preference */
                    Prefer?: "count=none";
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["account_activity_summary"][];
                        "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["account_activity_summary"][];
                        "application/vnd.pgrst.object+json": components["schemas"]["account_activity_summary"][];
                        "text/csv": components["schemas"]["account_activity_summary"][];
                    };
                };
                /** @description Partial Content */
                206: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/tweet_media": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    media_id?: string;
                    tweet_id?: string;
                    media_url?: string;
                    media_type?: string;
                    width?: string;
                    height?: string;
                    archive_upload_id?: string;
                    /** @description Filtering Columns */
                    select?: string;
                    /** @description Ordering */
                    order?: string;
                    /** @description Limiting and Pagination */
                    offset?: string;
                    /** @description Limiting and Pagination */
                    limit?: string;
                };
                header?: {
                    /** @description Limiting and Pagination */
                    Range?: string;
                    /** @description Limiting and Pagination */
                    "Range-Unit"?: string;
                    /** @description Preference */
                    Prefer?: "count=none";
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["tweet_media"][];
                        "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["tweet_media"][];
                        "application/vnd.pgrst.object+json": components["schemas"]["tweet_media"][];
                        "text/csv": components["schemas"]["tweet_media"][];
                    };
                };
                /** @description Partial Content */
                206: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: {
                    /** @description Filtering Columns */
                    select?: string;
                };
                header?: {
                    /** @description Preference */
                    Prefer?: "return=representation" | "return=minimal" | "return=none" | "resolution=ignore-duplicates" | "resolution=merge-duplicates";
                };
                path?: never;
                cookie?: never;
            };
            /** @description tweet_media */
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["tweet_media"];
                    "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["tweet_media"];
                    "application/vnd.pgrst.object+json": components["schemas"]["tweet_media"];
                    "text/csv": components["schemas"]["tweet_media"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete: {
            parameters: {
                query?: {
                    media_id?: string;
                    tweet_id?: string;
                    media_url?: string;
                    media_type?: string;
                    width?: string;
                    height?: string;
                    archive_upload_id?: string;
                };
                header?: {
                    /** @description Preference */
                    Prefer?: "return=representation" | "return=minimal" | "return=none";
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: {
                    media_id?: string;
                    tweet_id?: string;
                    media_url?: string;
                    media_type?: string;
                    width?: string;
                    height?: string;
                    archive_upload_id?: string;
                };
                header?: {
                    /** @description Preference */
                    Prefer?: "return=representation" | "return=minimal" | "return=none";
                };
                path?: never;
                cookie?: never;
            };
            /** @description tweet_media */
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["tweet_media"];
                    "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["tweet_media"];
                    "application/vnd.pgrst.object+json": components["schemas"]["tweet_media"];
                    "text/csv": components["schemas"]["tweet_media"];
                };
            };
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/tweets_w_conversation_id": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    tweet_id?: string;
                    account_id?: string;
                    created_at?: string;
                    full_text?: string;
                    retweet_count?: string;
                    favorite_count?: string;
                    reply_to_tweet_id?: string;
                    reply_to_user_id?: string;
                    reply_to_username?: string;
                    archive_upload_id?: string;
                    fts?: string;
                    conversation_id?: string;
                    /** @description Filtering Columns */
                    select?: string;
                    /** @description Ordering */
                    order?: string;
                    /** @description Limiting and Pagination */
                    offset?: string;
                    /** @description Limiting and Pagination */
                    limit?: string;
                };
                header?: {
                    /** @description Limiting and Pagination */
                    Range?: string;
                    /** @description Limiting and Pagination */
                    "Range-Unit"?: string;
                    /** @description Preference */
                    Prefer?: "count=none";
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["tweets_w_conversation_id"][];
                        "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["tweets_w_conversation_id"][];
                        "application/vnd.pgrst.object+json": components["schemas"]["tweets_w_conversation_id"][];
                        "text/csv": components["schemas"]["tweets_w_conversation_id"][];
                    };
                };
                /** @description Partial Content */
                206: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/global_activity_summary": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    total_accounts?: string;
                    total_tweets?: string;
                    total_likes?: string;
                    total_user_mentions?: string;
                    top_mentioned_users?: string;
                    top_accounts_with_followers?: string;
                    last_updated?: string;
                    /** @description Filtering Columns */
                    select?: string;
                    /** @description Ordering */
                    order?: string;
                    /** @description Limiting and Pagination */
                    offset?: string;
                    /** @description Limiting and Pagination */
                    limit?: string;
                };
                header?: {
                    /** @description Limiting and Pagination */
                    Range?: string;
                    /** @description Limiting and Pagination */
                    "Range-Unit"?: string;
                    /** @description Preference */
                    Prefer?: "count=none";
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["global_activity_summary"][];
                        "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["global_activity_summary"][];
                        "application/vnd.pgrst.object+json": components["schemas"]["global_activity_summary"][];
                        "text/csv": components["schemas"]["global_activity_summary"][];
                    };
                };
                /** @description Partial Content */
                206: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/account": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    account_id?: string;
                    created_via?: string;
                    username?: string;
                    created_at?: string;
                    account_display_name?: string;
                    num_tweets?: string;
                    num_following?: string;
                    num_followers?: string;
                    num_likes?: string;
                    /** @description Filtering Columns */
                    select?: string;
                    /** @description Ordering */
                    order?: string;
                    /** @description Limiting and Pagination */
                    offset?: string;
                    /** @description Limiting and Pagination */
                    limit?: string;
                };
                header?: {
                    /** @description Limiting and Pagination */
                    Range?: string;
                    /** @description Limiting and Pagination */
                    "Range-Unit"?: string;
                    /** @description Preference */
                    Prefer?: "count=none";
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["account"][];
                        "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["account"][];
                        "application/vnd.pgrst.object+json": components["schemas"]["account"][];
                        "text/csv": components["schemas"]["account"][];
                    };
                };
                /** @description Partial Content */
                206: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: {
                    /** @description Filtering Columns */
                    select?: string;
                };
                header?: {
                    /** @description Preference */
                    Prefer?: "return=representation" | "return=minimal" | "return=none" | "resolution=ignore-duplicates" | "resolution=merge-duplicates";
                };
                path?: never;
                cookie?: never;
            };
            /** @description account */
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["account"];
                    "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["account"];
                    "application/vnd.pgrst.object+json": components["schemas"]["account"];
                    "text/csv": components["schemas"]["account"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete: {
            parameters: {
                query?: {
                    account_id?: string;
                    created_via?: string;
                    username?: string;
                    created_at?: string;
                    account_display_name?: string;
                    num_tweets?: string;
                    num_following?: string;
                    num_followers?: string;
                    num_likes?: string;
                };
                header?: {
                    /** @description Preference */
                    Prefer?: "return=representation" | "return=minimal" | "return=none";
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: {
                    account_id?: string;
                    created_via?: string;
                    username?: string;
                    created_at?: string;
                    account_display_name?: string;
                    num_tweets?: string;
                    num_following?: string;
                    num_followers?: string;
                    num_likes?: string;
                };
                header?: {
                    /** @description Preference */
                    Prefer?: "return=representation" | "return=minimal" | "return=none";
                };
                path?: never;
                cookie?: never;
            };
            /** @description account */
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["account"];
                    "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["account"];
                    "application/vnd.pgrst.object+json": components["schemas"]["account"];
                    "text/csv": components["schemas"]["account"];
                };
            };
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/profile": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    id?: string;
                    account_id?: string;
                    bio?: string;
                    website?: string;
                    location?: string;
                    avatar_media_url?: string;
                    header_media_url?: string;
                    archive_upload_id?: string;
                    /** @description Filtering Columns */
                    select?: string;
                    /** @description Ordering */
                    order?: string;
                    /** @description Limiting and Pagination */
                    offset?: string;
                    /** @description Limiting and Pagination */
                    limit?: string;
                };
                header?: {
                    /** @description Limiting and Pagination */
                    Range?: string;
                    /** @description Limiting and Pagination */
                    "Range-Unit"?: string;
                    /** @description Preference */
                    Prefer?: "count=none";
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["profile"][];
                        "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["profile"][];
                        "application/vnd.pgrst.object+json": components["schemas"]["profile"][];
                        "text/csv": components["schemas"]["profile"][];
                    };
                };
                /** @description Partial Content */
                206: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: {
                    /** @description Filtering Columns */
                    select?: string;
                };
                header?: {
                    /** @description Preference */
                    Prefer?: "return=representation" | "return=minimal" | "return=none" | "resolution=ignore-duplicates" | "resolution=merge-duplicates";
                };
                path?: never;
                cookie?: never;
            };
            /** @description profile */
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["profile"];
                    "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["profile"];
                    "application/vnd.pgrst.object+json": components["schemas"]["profile"];
                    "text/csv": components["schemas"]["profile"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete: {
            parameters: {
                query?: {
                    id?: string;
                    account_id?: string;
                    bio?: string;
                    website?: string;
                    location?: string;
                    avatar_media_url?: string;
                    header_media_url?: string;
                    archive_upload_id?: string;
                };
                header?: {
                    /** @description Preference */
                    Prefer?: "return=representation" | "return=minimal" | "return=none";
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: {
                    id?: string;
                    account_id?: string;
                    bio?: string;
                    website?: string;
                    location?: string;
                    avatar_media_url?: string;
                    header_media_url?: string;
                    archive_upload_id?: string;
                };
                header?: {
                    /** @description Preference */
                    Prefer?: "return=representation" | "return=minimal" | "return=none";
                };
                path?: never;
                cookie?: never;
            };
            /** @description profile */
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["profile"];
                    "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["profile"];
                    "application/vnd.pgrst.object+json": components["schemas"]["profile"];
                    "text/csv": components["schemas"]["profile"];
                };
            };
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/tweets": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    tweet_id?: string;
                    account_id?: string;
                    created_at?: string;
                    full_text?: string;
                    retweet_count?: string;
                    favorite_count?: string;
                    reply_to_tweet_id?: string;
                    reply_to_user_id?: string;
                    reply_to_username?: string;
                    archive_upload_id?: string;
                    fts?: string;
                    /** @description Filtering Columns */
                    select?: string;
                    /** @description Ordering */
                    order?: string;
                    /** @description Limiting and Pagination */
                    offset?: string;
                    /** @description Limiting and Pagination */
                    limit?: string;
                };
                header?: {
                    /** @description Limiting and Pagination */
                    Range?: string;
                    /** @description Limiting and Pagination */
                    "Range-Unit"?: string;
                    /** @description Preference */
                    Prefer?: "count=none";
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["tweets"][];
                        "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["tweets"][];
                        "application/vnd.pgrst.object+json": components["schemas"]["tweets"][];
                        "text/csv": components["schemas"]["tweets"][];
                    };
                };
                /** @description Partial Content */
                206: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: {
                    /** @description Filtering Columns */
                    select?: string;
                };
                header?: {
                    /** @description Preference */
                    Prefer?: "return=representation" | "return=minimal" | "return=none" | "resolution=ignore-duplicates" | "resolution=merge-duplicates";
                };
                path?: never;
                cookie?: never;
            };
            /** @description tweets */
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["tweets"];
                    "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["tweets"];
                    "application/vnd.pgrst.object+json": components["schemas"]["tweets"];
                    "text/csv": components["schemas"]["tweets"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete: {
            parameters: {
                query?: {
                    tweet_id?: string;
                    account_id?: string;
                    created_at?: string;
                    full_text?: string;
                    retweet_count?: string;
                    favorite_count?: string;
                    reply_to_tweet_id?: string;
                    reply_to_user_id?: string;
                    reply_to_username?: string;
                    archive_upload_id?: string;
                    fts?: string;
                };
                header?: {
                    /** @description Preference */
                    Prefer?: "return=representation" | "return=minimal" | "return=none";
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: {
                    tweet_id?: string;
                    account_id?: string;
                    created_at?: string;
                    full_text?: string;
                    retweet_count?: string;
                    favorite_count?: string;
                    reply_to_tweet_id?: string;
                    reply_to_user_id?: string;
                    reply_to_username?: string;
                    archive_upload_id?: string;
                    fts?: string;
                };
                header?: {
                    /** @description Preference */
                    Prefer?: "return=representation" | "return=minimal" | "return=none";
                };
                path?: never;
                cookie?: never;
            };
            /** @description tweets */
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["tweets"];
                    "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["tweets"];
                    "application/vnd.pgrst.object+json": components["schemas"]["tweets"];
                    "text/csv": components["schemas"]["tweets"];
                };
            };
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/likes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    id?: string;
                    account_id?: string;
                    liked_tweet_id?: string;
                    archive_upload_id?: string;
                    /** @description Filtering Columns */
                    select?: string;
                    /** @description Ordering */
                    order?: string;
                    /** @description Limiting and Pagination */
                    offset?: string;
                    /** @description Limiting and Pagination */
                    limit?: string;
                };
                header?: {
                    /** @description Limiting and Pagination */
                    Range?: string;
                    /** @description Limiting and Pagination */
                    "Range-Unit"?: string;
                    /** @description Preference */
                    Prefer?: "count=none";
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["likes"][];
                        "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["likes"][];
                        "application/vnd.pgrst.object+json": components["schemas"]["likes"][];
                        "text/csv": components["schemas"]["likes"][];
                    };
                };
                /** @description Partial Content */
                206: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: {
                    /** @description Filtering Columns */
                    select?: string;
                };
                header?: {
                    /** @description Preference */
                    Prefer?: "return=representation" | "return=minimal" | "return=none" | "resolution=ignore-duplicates" | "resolution=merge-duplicates";
                };
                path?: never;
                cookie?: never;
            };
            /** @description likes */
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["likes"];
                    "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["likes"];
                    "application/vnd.pgrst.object+json": components["schemas"]["likes"];
                    "text/csv": components["schemas"]["likes"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete: {
            parameters: {
                query?: {
                    id?: string;
                    account_id?: string;
                    liked_tweet_id?: string;
                    archive_upload_id?: string;
                };
                header?: {
                    /** @description Preference */
                    Prefer?: "return=representation" | "return=minimal" | "return=none";
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: {
                    id?: string;
                    account_id?: string;
                    liked_tweet_id?: string;
                    archive_upload_id?: string;
                };
                header?: {
                    /** @description Preference */
                    Prefer?: "return=representation" | "return=minimal" | "return=none";
                };
                path?: never;
                cookie?: never;
            };
            /** @description likes */
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["likes"];
                    "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["likes"];
                    "application/vnd.pgrst.object+json": components["schemas"]["likes"];
                    "text/csv": components["schemas"]["likes"];
                };
            };
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/user_mentions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    id?: string;
                    mentioned_user_id?: string;
                    tweet_id?: string;
                    /** @description Filtering Columns */
                    select?: string;
                    /** @description Ordering */
                    order?: string;
                    /** @description Limiting and Pagination */
                    offset?: string;
                    /** @description Limiting and Pagination */
                    limit?: string;
                };
                header?: {
                    /** @description Limiting and Pagination */
                    Range?: string;
                    /** @description Limiting and Pagination */
                    "Range-Unit"?: string;
                    /** @description Preference */
                    Prefer?: "count=none";
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["user_mentions"][];
                        "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["user_mentions"][];
                        "application/vnd.pgrst.object+json": components["schemas"]["user_mentions"][];
                        "text/csv": components["schemas"]["user_mentions"][];
                    };
                };
                /** @description Partial Content */
                206: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: {
                    /** @description Filtering Columns */
                    select?: string;
                };
                header?: {
                    /** @description Preference */
                    Prefer?: "return=representation" | "return=minimal" | "return=none" | "resolution=ignore-duplicates" | "resolution=merge-duplicates";
                };
                path?: never;
                cookie?: never;
            };
            /** @description user_mentions */
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["user_mentions"];
                    "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["user_mentions"];
                    "application/vnd.pgrst.object+json": components["schemas"]["user_mentions"];
                    "text/csv": components["schemas"]["user_mentions"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete: {
            parameters: {
                query?: {
                    id?: string;
                    mentioned_user_id?: string;
                    tweet_id?: string;
                };
                header?: {
                    /** @description Preference */
                    Prefer?: "return=representation" | "return=minimal" | "return=none";
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: {
                    id?: string;
                    mentioned_user_id?: string;
                    tweet_id?: string;
                };
                header?: {
                    /** @description Preference */
                    Prefer?: "return=representation" | "return=minimal" | "return=none";
                };
                path?: never;
                cookie?: never;
            };
            /** @description user_mentions */
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["user_mentions"];
                    "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["user_mentions"];
                    "application/vnd.pgrst.object+json": components["schemas"]["user_mentions"];
                    "text/csv": components["schemas"]["user_mentions"];
                };
            };
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/conversations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    tweet_id?: string;
                    conversation_id?: string;
                    /** @description Filtering Columns */
                    select?: string;
                    /** @description Ordering */
                    order?: string;
                    /** @description Limiting and Pagination */
                    offset?: string;
                    /** @description Limiting and Pagination */
                    limit?: string;
                };
                header?: {
                    /** @description Limiting and Pagination */
                    Range?: string;
                    /** @description Limiting and Pagination */
                    "Range-Unit"?: string;
                    /** @description Preference */
                    Prefer?: "count=none";
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["conversations"][];
                        "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["conversations"][];
                        "application/vnd.pgrst.object+json": components["schemas"]["conversations"][];
                        "text/csv": components["schemas"]["conversations"][];
                    };
                };
                /** @description Partial Content */
                206: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: {
                    /** @description Filtering Columns */
                    select?: string;
                };
                header?: {
                    /** @description Preference */
                    Prefer?: "return=representation" | "return=minimal" | "return=none" | "resolution=ignore-duplicates" | "resolution=merge-duplicates";
                };
                path?: never;
                cookie?: never;
            };
            /** @description conversations */
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["conversations"];
                    "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["conversations"];
                    "application/vnd.pgrst.object+json": components["schemas"]["conversations"];
                    "text/csv": components["schemas"]["conversations"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete: {
            parameters: {
                query?: {
                    tweet_id?: string;
                    conversation_id?: string;
                };
                header?: {
                    /** @description Preference */
                    Prefer?: "return=representation" | "return=minimal" | "return=none";
                };
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: {
                    tweet_id?: string;
                    conversation_id?: string;
                };
                header?: {
                    /** @description Preference */
                    Prefer?: "return=representation" | "return=minimal" | "return=none";
                };
                path?: never;
                cookie?: never;
            };
            /** @description conversations */
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["conversations"];
                    "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["conversations"];
                    "application/vnd.pgrst.object+json": components["schemas"]["conversations"];
                    "text/csv": components["schemas"]["conversations"];
                };
            };
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/rpc/create_temp_tables": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    p_suffix: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: text */
                        p_suffix: string;
                    };
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        /** Format: text */
                        p_suffix: string;
                    };
                    "application/vnd.pgrst.object+json": {
                        /** Format: text */
                        p_suffix: string;
                    };
                    "text/csv": {
                        /** Format: text */
                        p_suffix: string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/insert_temp_profiles": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    p_profile: string;
                    p_account_id: string;
                    p_suffix: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: text */
                        p_account_id: string;
                        /** Format: jsonb */
                        p_profile: Record<string, never>;
                        /** Format: text */
                        p_suffix: string;
                    };
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        /** Format: text */
                        p_account_id: string;
                        /** Format: jsonb */
                        p_profile: Record<string, never>;
                        /** Format: text */
                        p_suffix: string;
                    };
                    "application/vnd.pgrst.object+json": {
                        /** Format: text */
                        p_account_id: string;
                        /** Format: jsonb */
                        p_profile: Record<string, never>;
                        /** Format: text */
                        p_suffix: string;
                    };
                    "text/csv": {
                        /** Format: text */
                        p_account_id: string;
                        /** Format: jsonb */
                        p_profile: Record<string, never>;
                        /** Format: text */
                        p_suffix: string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/get_main_thread": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Returns the main thread view for a given conversation_id */
        get: {
            parameters: {
                query: {
                    p_conversation_id: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        /** Returns the main thread view for a given conversation_id */
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: text */
                        p_conversation_id: string;
                    };
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        /** Format: text */
                        p_conversation_id: string;
                    };
                    "application/vnd.pgrst.object+json": {
                        /** Format: text */
                        p_conversation_id: string;
                    };
                    "text/csv": {
                        /** Format: text */
                        p_conversation_id: string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/get_most_mentioned_accounts_by_username": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    username_: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: text */
                        username_: string;
                    };
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        /** Format: text */
                        username_: string;
                    };
                    "application/vnd.pgrst.object+json": {
                        /** Format: text */
                        username_: string;
                    };
                    "text/csv": {
                        /** Format: text */
                        username_: string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/insert_temp_following": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    p_following: string;
                    p_account_id: string;
                    p_suffix: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: text */
                        p_account_id: string;
                        /** Format: jsonb */
                        p_following: Record<string, never>;
                        /** Format: text */
                        p_suffix: string;
                    };
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        /** Format: text */
                        p_account_id: string;
                        /** Format: jsonb */
                        p_following: Record<string, never>;
                        /** Format: text */
                        p_suffix: string;
                    };
                    "application/vnd.pgrst.object+json": {
                        /** Format: text */
                        p_account_id: string;
                        /** Format: jsonb */
                        p_following: Record<string, never>;
                        /** Format: text */
                        p_suffix: string;
                    };
                    "text/csv": {
                        /** Format: text */
                        p_account_id: string;
                        /** Format: jsonb */
                        p_following: Record<string, never>;
                        /** Format: text */
                        p_suffix: string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/tes_get_tweets_on_this_day": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    p_limit?: number;
                    p_account_id?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: text */
                        p_account_id?: string;
                        /** Format: integer */
                        p_limit?: number;
                    };
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        /** Format: text */
                        p_account_id?: string;
                        /** Format: integer */
                        p_limit?: number;
                    };
                    "application/vnd.pgrst.object+json": {
                        /** Format: text */
                        p_account_id?: string;
                        /** Format: integer */
                        p_limit?: number;
                    };
                    "text/csv": {
                        /** Format: text */
                        p_account_id?: string;
                        /** Format: integer */
                        p_limit?: number;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/get_latest_tweets": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    count: number;
                    p_account_id?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: integer */
                        count: number;
                        /** Format: text */
                        p_account_id?: string;
                    };
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        /** Format: integer */
                        count: number;
                        /** Format: text */
                        p_account_id?: string;
                    };
                    "application/vnd.pgrst.object+json": {
                        /** Format: integer */
                        count: number;
                        /** Format: text */
                        p_account_id?: string;
                    };
                    "text/csv": {
                        /** Format: integer */
                        count: number;
                        /** Format: text */
                        p_account_id?: string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/get_account_top_retweet_count_tweets": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    username_: string;
                    limit_: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: integer */
                        limit_: number;
                        /** Format: text */
                        username_: string;
                    };
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        /** Format: integer */
                        limit_: number;
                        /** Format: text */
                        username_: string;
                    };
                    "application/vnd.pgrst.object+json": {
                        /** Format: integer */
                        limit_: number;
                        /** Format: text */
                        username_: string;
                    };
                    "text/csv": {
                        /** Format: integer */
                        limit_: number;
                        /** Format: text */
                        username_: string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/get_most_liked_tweets_by_username": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    username_: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: text */
                        username_: string;
                    };
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        /** Format: text */
                        username_: string;
                    };
                    "application/vnd.pgrst.object+json": {
                        /** Format: text */
                        username_: string;
                    };
                    "text/csv": {
                        /** Format: text */
                        username_: string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/word_occurrences": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    search_word: string;
                    start_date?: string;
                    end_date?: string;
                    user_ids?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: timestamp with time zone */
                        end_date?: string;
                        /** Format: text */
                        search_word: string;
                        /** Format: timestamp with time zone */
                        start_date?: string;
                        user_ids?: string[];
                    };
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        /** Format: timestamp with time zone */
                        end_date?: string;
                        /** Format: text */
                        search_word: string;
                        /** Format: timestamp with time zone */
                        start_date?: string;
                        user_ids?: string[];
                    };
                    "application/vnd.pgrst.object+json": {
                        /** Format: timestamp with time zone */
                        end_date?: string;
                        /** Format: text */
                        search_word: string;
                        /** Format: timestamp with time zone */
                        start_date?: string;
                        user_ids?: string[];
                    };
                    "text/csv": {
                        /** Format: timestamp with time zone */
                        end_date?: string;
                        /** Format: text */
                        search_word: string;
                        /** Format: timestamp with time zone */
                        start_date?: string;
                        user_ids?: string[];
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/insert_temp_followers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    p_followers: string;
                    p_account_id: string;
                    p_suffix: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: text */
                        p_account_id: string;
                        /** Format: jsonb */
                        p_followers: Record<string, never>;
                        /** Format: text */
                        p_suffix: string;
                    };
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        /** Format: text */
                        p_account_id: string;
                        /** Format: jsonb */
                        p_followers: Record<string, never>;
                        /** Format: text */
                        p_suffix: string;
                    };
                    "application/vnd.pgrst.object+json": {
                        /** Format: text */
                        p_account_id: string;
                        /** Format: jsonb */
                        p_followers: Record<string, never>;
                        /** Format: text */
                        p_suffix: string;
                    };
                    "text/csv": {
                        /** Format: text */
                        p_account_id: string;
                        /** Format: jsonb */
                        p_followers: Record<string, never>;
                        /** Format: text */
                        p_suffix: string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/get_account_most_mentioned_accounts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    username_: string;
                    limit_: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: integer */
                        limit_: number;
                        /** Format: text */
                        username_: string;
                    };
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        /** Format: integer */
                        limit_: number;
                        /** Format: text */
                        username_: string;
                    };
                    "application/vnd.pgrst.object+json": {
                        /** Format: integer */
                        limit_: number;
                        /** Format: text */
                        username_: string;
                    };
                    "text/csv": {
                        /** Format: integer */
                        limit_: number;
                        /** Format: text */
                        username_: string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/apply_public_entities_rls_policies": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    schema_name: string;
                    table_name: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: text */
                        schema_name: string;
                        /** Format: text */
                        table_name: string;
                    };
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        /** Format: text */
                        schema_name: string;
                        /** Format: text */
                        table_name: string;
                    };
                    "application/vnd.pgrst.object+json": {
                        /** Format: text */
                        schema_name: string;
                        /** Format: text */
                        table_name: string;
                    };
                    "text/csv": {
                        /** Format: text */
                        schema_name: string;
                        /** Format: text */
                        table_name: string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/tes_get_tweet_counts_by_date": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    p_account_id: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: text */
                        p_account_id: string;
                    };
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        /** Format: text */
                        p_account_id: string;
                    };
                    "application/vnd.pgrst.object+json": {
                        /** Format: text */
                        p_account_id: string;
                    };
                    "text/csv": {
                        /** Format: text */
                        p_account_id: string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/search_tweets": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    search_query: string;
                    from_user?: string;
                    to_user?: string;
                    since_date?: string;
                    until_date?: string;
                    limit_?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: text */
                        from_user?: string;
                        /** Format: integer */
                        limit_?: number;
                        /** Format: text */
                        search_query: string;
                        /** Format: date */
                        since_date?: string;
                        /** Format: text */
                        to_user?: string;
                        /** Format: date */
                        until_date?: string;
                    };
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        /** Format: text */
                        from_user?: string;
                        /** Format: integer */
                        limit_?: number;
                        /** Format: text */
                        search_query: string;
                        /** Format: date */
                        since_date?: string;
                        /** Format: text */
                        to_user?: string;
                        /** Format: date */
                        until_date?: string;
                    };
                    "application/vnd.pgrst.object+json": {
                        /** Format: text */
                        from_user?: string;
                        /** Format: integer */
                        limit_?: number;
                        /** Format: text */
                        search_query: string;
                        /** Format: date */
                        since_date?: string;
                        /** Format: text */
                        to_user?: string;
                        /** Format: date */
                        until_date?: string;
                    };
                    "text/csv": {
                        /** Format: text */
                        from_user?: string;
                        /** Format: integer */
                        limit_?: number;
                        /** Format: text */
                        search_query: string;
                        /** Format: date */
                        since_date?: string;
                        /** Format: text */
                        to_user?: string;
                        /** Format: date */
                        until_date?: string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/drop_all_policies": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    schema_name: string;
                    table_name: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: text */
                        schema_name: string;
                        /** Format: text */
                        table_name: string;
                    };
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        /** Format: text */
                        schema_name: string;
                        /** Format: text */
                        table_name: string;
                    };
                    "application/vnd.pgrst.object+json": {
                        /** Format: text */
                        schema_name: string;
                        /** Format: text */
                        table_name: string;
                    };
                    "text/csv": {
                        /** Format: text */
                        schema_name: string;
                        /** Format: text */
                        table_name: string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/show_trgm": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    "": string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: text */
                        "": string;
                    };
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        /** Format: text */
                        "": string;
                    };
                    "application/vnd.pgrst.object+json": {
                        /** Format: text */
                        "": string;
                    };
                    "text/csv": {
                        /** Format: text */
                        "": string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/get_tweet_count_by_date": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    start_date: string;
                    end_date: string;
                    granularity: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: timestamp with time zone */
                        end_date: string;
                        /** Format: text */
                        granularity: string;
                        /** Format: timestamp with time zone */
                        start_date: string;
                    };
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        /** Format: timestamp with time zone */
                        end_date: string;
                        /** Format: text */
                        granularity: string;
                        /** Format: timestamp with time zone */
                        start_date: string;
                    };
                    "application/vnd.pgrst.object+json": {
                        /** Format: timestamp with time zone */
                        end_date: string;
                        /** Format: text */
                        granularity: string;
                        /** Format: timestamp with time zone */
                        start_date: string;
                    };
                    "text/csv": {
                        /** Format: timestamp with time zone */
                        end_date: string;
                        /** Format: text */
                        granularity: string;
                        /** Format: timestamp with time zone */
                        start_date: string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/process_archive": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    archive_data: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: jsonb */
                        archive_data: Record<string, never>;
                    };
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        /** Format: jsonb */
                        archive_data: Record<string, never>;
                    };
                    "application/vnd.pgrst.object+json": {
                        /** Format: jsonb */
                        archive_data: Record<string, never>;
                    };
                    "text/csv": {
                        /** Format: jsonb */
                        archive_data: Record<string, never>;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/tes_search_tweets": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    search_query: string;
                    from_user?: string;
                    to_user?: string;
                    since_date?: string;
                    until_date?: string;
                    min_likes?: number;
                    min_retweets?: number;
                    max_likes?: number;
                    max_retweets?: number;
                    limit_?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: text */
                        from_user?: string;
                        /** Format: integer */
                        limit_?: number;
                        /** Format: integer */
                        max_likes?: number;
                        /** Format: integer */
                        max_retweets?: number;
                        /** Format: integer */
                        min_likes?: number;
                        /** Format: integer */
                        min_retweets?: number;
                        /** Format: text */
                        search_query: string;
                        /** Format: date */
                        since_date?: string;
                        /** Format: text */
                        to_user?: string;
                        /** Format: date */
                        until_date?: string;
                    };
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        /** Format: text */
                        from_user?: string;
                        /** Format: integer */
                        limit_?: number;
                        /** Format: integer */
                        max_likes?: number;
                        /** Format: integer */
                        max_retweets?: number;
                        /** Format: integer */
                        min_likes?: number;
                        /** Format: integer */
                        min_retweets?: number;
                        /** Format: text */
                        search_query: string;
                        /** Format: date */
                        since_date?: string;
                        /** Format: text */
                        to_user?: string;
                        /** Format: date */
                        until_date?: string;
                    };
                    "application/vnd.pgrst.object+json": {
                        /** Format: text */
                        from_user?: string;
                        /** Format: integer */
                        limit_?: number;
                        /** Format: integer */
                        max_likes?: number;
                        /** Format: integer */
                        max_retweets?: number;
                        /** Format: integer */
                        min_likes?: number;
                        /** Format: integer */
                        min_retweets?: number;
                        /** Format: text */
                        search_query: string;
                        /** Format: date */
                        since_date?: string;
                        /** Format: text */
                        to_user?: string;
                        /** Format: date */
                        until_date?: string;
                    };
                    "text/csv": {
                        /** Format: text */
                        from_user?: string;
                        /** Format: integer */
                        limit_?: number;
                        /** Format: integer */
                        max_likes?: number;
                        /** Format: integer */
                        max_retweets?: number;
                        /** Format: integer */
                        min_likes?: number;
                        /** Format: integer */
                        min_retweets?: number;
                        /** Format: text */
                        search_query: string;
                        /** Format: date */
                        since_date?: string;
                        /** Format: text */
                        to_user?: string;
                        /** Format: date */
                        until_date?: string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/drop_temp_tables": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    p_suffix: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: text */
                        p_suffix: string;
                    };
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        /** Format: text */
                        p_suffix: string;
                    };
                    "application/vnd.pgrst.object+json": {
                        /** Format: text */
                        p_suffix: string;
                    };
                    "text/csv": {
                        /** Format: text */
                        p_suffix: string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/apply_public_rls_policies_not_private": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    schema_name: string;
                    table_name: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: text */
                        schema_name: string;
                        /** Format: text */
                        table_name: string;
                    };
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        /** Format: text */
                        schema_name: string;
                        /** Format: text */
                        table_name: string;
                    };
                    "application/vnd.pgrst.object+json": {
                        /** Format: text */
                        schema_name: string;
                        /** Format: text */
                        table_name: string;
                    };
                    "text/csv": {
                        /** Format: text */
                        schema_name: string;
                        /** Format: text */
                        table_name: string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/delete_all_archives": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    p_account_id: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: text */
                        p_account_id: string;
                    };
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        /** Format: text */
                        p_account_id: string;
                    };
                    "application/vnd.pgrst.object+json": {
                        /** Format: text */
                        p_account_id: string;
                    };
                    "text/csv": {
                        /** Format: text */
                        p_account_id: string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/get_tweets_in_user_conversations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    username_: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: text */
                        username_: string;
                    };
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        /** Format: text */
                        username_: string;
                    };
                    "application/vnd.pgrst.object+json": {
                        /** Format: text */
                        username_: string;
                    };
                    "text/csv": {
                        /** Format: text */
                        username_: string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/insert_temp_account": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    p_account: string;
                    p_suffix: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: jsonb */
                        p_account: Record<string, never>;
                        /** Format: text */
                        p_suffix: string;
                    };
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        /** Format: jsonb */
                        p_account: Record<string, never>;
                        /** Format: text */
                        p_suffix: string;
                    };
                    "application/vnd.pgrst.object+json": {
                        /** Format: jsonb */
                        p_account: Record<string, never>;
                        /** Format: text */
                        p_suffix: string;
                    };
                    "text/csv": {
                        /** Format: jsonb */
                        p_account: Record<string, never>;
                        /** Format: text */
                        p_suffix: string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/apply_public_liked_tweets_rls_policies": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    schema_name: string;
                    table_name: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: text */
                        schema_name: string;
                        /** Format: text */
                        table_name: string;
                    };
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        /** Format: text */
                        schema_name: string;
                        /** Format: text */
                        table_name: string;
                    };
                    "application/vnd.pgrst.object+json": {
                        /** Format: text */
                        schema_name: string;
                        /** Format: text */
                        table_name: string;
                    };
                    "text/csv": {
                        /** Format: text */
                        schema_name: string;
                        /** Format: text */
                        table_name: string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/tes_get_followers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    user_id: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: text */
                        user_id: string;
                    };
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        /** Format: text */
                        user_id: string;
                    };
                    "application/vnd.pgrst.object+json": {
                        /** Format: text */
                        user_id: string;
                    };
                    "text/csv": {
                        /** Format: text */
                        user_id: string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/insert_temp_likes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    p_likes: string;
                    p_account_id: string;
                    p_suffix: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: text */
                        p_account_id: string;
                        /** Format: jsonb */
                        p_likes: Record<string, never>;
                        /** Format: text */
                        p_suffix: string;
                    };
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        /** Format: text */
                        p_account_id: string;
                        /** Format: jsonb */
                        p_likes: Record<string, never>;
                        /** Format: text */
                        p_suffix: string;
                    };
                    "application/vnd.pgrst.object+json": {
                        /** Format: text */
                        p_account_id: string;
                        /** Format: jsonb */
                        p_likes: Record<string, never>;
                        /** Format: text */
                        p_suffix: string;
                    };
                    "text/csv": {
                        /** Format: text */
                        p_account_id: string;
                        /** Format: jsonb */
                        p_likes: Record<string, never>;
                        /** Format: text */
                        p_suffix: string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/pg_search_tweets": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    search_query: string;
                    p_account_id?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: text */
                        p_account_id?: string;
                        /** Format: text */
                        search_query: string;
                    };
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        /** Format: text */
                        p_account_id?: string;
                        /** Format: text */
                        search_query: string;
                    };
                    "application/vnd.pgrst.object+json": {
                        /** Format: text */
                        p_account_id?: string;
                        /** Format: text */
                        search_query: string;
                    };
                    "text/csv": {
                        /** Format: text */
                        p_account_id?: string;
                        /** Format: text */
                        search_query: string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/tes_search_liked_tweets": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    search_query: string;
                    from_user?: string;
                    to_user?: string;
                    since_date?: string;
                    until_date?: string;
                    min_likes?: number;
                    min_retweets?: number;
                    max_likes?: number;
                    max_retweets?: number;
                    limit_?: number;
                    auth_account_id?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: text */
                        auth_account_id?: string;
                        /** Format: text */
                        from_user?: string;
                        /** Format: integer */
                        limit_?: number;
                        /** Format: integer */
                        max_likes?: number;
                        /** Format: integer */
                        max_retweets?: number;
                        /** Format: integer */
                        min_likes?: number;
                        /** Format: integer */
                        min_retweets?: number;
                        /** Format: text */
                        search_query: string;
                        /** Format: date */
                        since_date?: string;
                        /** Format: text */
                        to_user?: string;
                        /** Format: date */
                        until_date?: string;
                    };
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        /** Format: text */
                        auth_account_id?: string;
                        /** Format: text */
                        from_user?: string;
                        /** Format: integer */
                        limit_?: number;
                        /** Format: integer */
                        max_likes?: number;
                        /** Format: integer */
                        max_retweets?: number;
                        /** Format: integer */
                        min_likes?: number;
                        /** Format: integer */
                        min_retweets?: number;
                        /** Format: text */
                        search_query: string;
                        /** Format: date */
                        since_date?: string;
                        /** Format: text */
                        to_user?: string;
                        /** Format: date */
                        until_date?: string;
                    };
                    "application/vnd.pgrst.object+json": {
                        /** Format: text */
                        auth_account_id?: string;
                        /** Format: text */
                        from_user?: string;
                        /** Format: integer */
                        limit_?: number;
                        /** Format: integer */
                        max_likes?: number;
                        /** Format: integer */
                        max_retweets?: number;
                        /** Format: integer */
                        min_likes?: number;
                        /** Format: integer */
                        min_retweets?: number;
                        /** Format: text */
                        search_query: string;
                        /** Format: date */
                        since_date?: string;
                        /** Format: text */
                        to_user?: string;
                        /** Format: date */
                        until_date?: string;
                    };
                    "text/csv": {
                        /** Format: text */
                        auth_account_id?: string;
                        /** Format: text */
                        from_user?: string;
                        /** Format: integer */
                        limit_?: number;
                        /** Format: integer */
                        max_likes?: number;
                        /** Format: integer */
                        max_retweets?: number;
                        /** Format: integer */
                        min_likes?: number;
                        /** Format: integer */
                        min_retweets?: number;
                        /** Format: text */
                        search_query: string;
                        /** Format: date */
                        since_date?: string;
                        /** Format: text */
                        to_user?: string;
                        /** Format: date */
                        until_date?: string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/insert_temp_tweets": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    p_tweets: string;
                    p_suffix: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: text */
                        p_suffix: string;
                        /** Format: jsonb */
                        p_tweets: Record<string, never>;
                    };
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        /** Format: text */
                        p_suffix: string;
                        /** Format: jsonb */
                        p_tweets: Record<string, never>;
                    };
                    "application/vnd.pgrst.object+json": {
                        /** Format: text */
                        p_suffix: string;
                        /** Format: jsonb */
                        p_tweets: Record<string, never>;
                    };
                    "text/csv": {
                        /** Format: text */
                        p_suffix: string;
                        /** Format: jsonb */
                        p_tweets: Record<string, never>;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/get_monthly_tweet_counts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": Record<string, never>;
                    "application/vnd.pgrst.object+json;nulls=stripped": Record<string, never>;
                    "application/vnd.pgrst.object+json": Record<string, never>;
                    "text/csv": Record<string, never>;
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/show_limit": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": Record<string, never>;
                    "application/vnd.pgrst.object+json;nulls=stripped": Record<string, never>;
                    "application/vnd.pgrst.object+json": Record<string, never>;
                    "text/csv": Record<string, never>;
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/tes_get_followings": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    user_id: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: text */
                        user_id: string;
                    };
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        /** Format: text */
                        user_id: string;
                    };
                    "application/vnd.pgrst.object+json": {
                        /** Format: text */
                        user_id: string;
                    };
                    "text/csv": {
                        /** Format: text */
                        user_id: string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/get_account_most_liked_tweets_archive_users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    username_: string;
                    limit_?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: integer */
                        limit_?: number;
                        /** Format: text */
                        username_: string;
                    };
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        /** Format: integer */
                        limit_?: number;
                        /** Format: text */
                        username_: string;
                    };
                    "application/vnd.pgrst.object+json": {
                        /** Format: integer */
                        limit_?: number;
                        /** Format: text */
                        username_: string;
                    };
                    "text/csv": {
                        /** Format: integer */
                        limit_?: number;
                        /** Format: text */
                        username_: string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/apply_public_rls_policies": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    schema_name: string;
                    table_name: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: text */
                        schema_name: string;
                        /** Format: text */
                        table_name: string;
                    };
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        /** Format: text */
                        schema_name: string;
                        /** Format: text */
                        table_name: string;
                    };
                    "application/vnd.pgrst.object+json": {
                        /** Format: text */
                        schema_name: string;
                        /** Format: text */
                        table_name: string;
                    };
                    "text/csv": {
                        /** Format: text */
                        schema_name: string;
                        /** Format: text */
                        table_name: string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/get_top_accounts_with_followers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    limit_count: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: integer */
                        limit_count: number;
                    };
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        /** Format: integer */
                        limit_count: number;
                    };
                    "application/vnd.pgrst.object+json": {
                        /** Format: integer */
                        limit_count: number;
                    };
                    "text/csv": {
                        /** Format: integer */
                        limit_count: number;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/insert_temp_archive_upload": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Inserts upload options into temporary archive_upload table */
        get: {
            parameters: {
                query: {
                    p_account_id: string;
                    p_archive_at: string;
                    p_keep_private: boolean;
                    p_upload_likes: boolean;
                    p_start_date: string;
                    p_end_date: string;
                    p_suffix: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        /** Inserts upload options into temporary archive_upload table */
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: text */
                        p_account_id: string;
                        /** Format: timestamp with time zone */
                        p_archive_at: string;
                        /** Format: date */
                        p_end_date: string;
                        /** Format: boolean */
                        p_keep_private: boolean;
                        /** Format: date */
                        p_start_date: string;
                        /** Format: text */
                        p_suffix: string;
                        /** Format: boolean */
                        p_upload_likes: boolean;
                    };
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        /** Format: text */
                        p_account_id: string;
                        /** Format: timestamp with time zone */
                        p_archive_at: string;
                        /** Format: date */
                        p_end_date: string;
                        /** Format: boolean */
                        p_keep_private: boolean;
                        /** Format: date */
                        p_start_date: string;
                        /** Format: text */
                        p_suffix: string;
                        /** Format: boolean */
                        p_upload_likes: boolean;
                    };
                    "application/vnd.pgrst.object+json": {
                        /** Format: text */
                        p_account_id: string;
                        /** Format: timestamp with time zone */
                        p_archive_at: string;
                        /** Format: date */
                        p_end_date: string;
                        /** Format: boolean */
                        p_keep_private: boolean;
                        /** Format: date */
                        p_start_date: string;
                        /** Format: text */
                        p_suffix: string;
                        /** Format: boolean */
                        p_upload_likes: boolean;
                    };
                    "text/csv": {
                        /** Format: text */
                        p_account_id: string;
                        /** Format: timestamp with time zone */
                        p_archive_at: string;
                        /** Format: date */
                        p_end_date: string;
                        /** Format: boolean */
                        p_keep_private: boolean;
                        /** Format: date */
                        p_start_date: string;
                        /** Format: text */
                        p_suffix: string;
                        /** Format: boolean */
                        p_upload_likes: boolean;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/get_account_top_favorite_count_tweets": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    username_: string;
                    limit_: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: integer */
                        limit_: number;
                        /** Format: text */
                        username_: string;
                    };
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        /** Format: integer */
                        limit_: number;
                        /** Format: text */
                        username_: string;
                    };
                    "application/vnd.pgrst.object+json": {
                        /** Format: integer */
                        limit_: number;
                        /** Format: text */
                        username_: string;
                    };
                    "text/csv": {
                        /** Format: integer */
                        limit_: number;
                        /** Format: text */
                        username_: string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/get_top_mentioned_users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    limit_: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: integer */
                        limit_: number;
                    };
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        /** Format: integer */
                        limit_: number;
                    };
                    "application/vnd.pgrst.object+json": {
                        /** Format: integer */
                        limit_: number;
                    };
                    "text/csv": {
                        /** Format: integer */
                        limit_: number;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/get_account_most_replied_tweets_by_archive_users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    username_: string;
                    limit_: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: integer */
                        limit_: number;
                        /** Format: text */
                        username_: string;
                    };
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        /** Format: integer */
                        limit_: number;
                        /** Format: text */
                        username_: string;
                    };
                    "application/vnd.pgrst.object+json": {
                        /** Format: integer */
                        limit_: number;
                        /** Format: text */
                        username_: string;
                    };
                    "text/csv": {
                        /** Format: integer */
                        limit_: number;
                        /** Format: text */
                        username_: string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/get_top_liked_users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": Record<string, never>;
                    "application/vnd.pgrst.object+json;nulls=stripped": Record<string, never>;
                    "application/vnd.pgrst.object+json": Record<string, never>;
                    "text/csv": Record<string, never>;
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/get_top_retweeted_tweets_by_username": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    username_: string;
                    limit_: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: integer */
                        limit_: number;
                        /** Format: text */
                        username_: string;
                    };
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        /** Format: integer */
                        limit_: number;
                        /** Format: text */
                        username_: string;
                    };
                    "application/vnd.pgrst.object+json": {
                        /** Format: integer */
                        limit_: number;
                        /** Format: text */
                        username_: string;
                    };
                    "text/csv": {
                        /** Format: integer */
                        limit_: number;
                        /** Format: text */
                        username_: string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/process_and_insert_tweet_entities": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    p_tweets: string;
                    p_suffix: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: text */
                        p_suffix: string;
                        /** Format: jsonb */
                        p_tweets: Record<string, never>;
                    };
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        /** Format: text */
                        p_suffix: string;
                        /** Format: jsonb */
                        p_tweets: Record<string, never>;
                    };
                    "application/vnd.pgrst.object+json": {
                        /** Format: text */
                        p_suffix: string;
                        /** Format: jsonb */
                        p_tweets: Record<string, never>;
                    };
                    "text/csv": {
                        /** Format: text */
                        p_suffix: string;
                        /** Format: jsonb */
                        p_tweets: Record<string, never>;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/tes_get_moots": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    user_id: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: text */
                        user_id: string;
                    };
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        /** Format: text */
                        user_id: string;
                    };
                    "application/vnd.pgrst.object+json": {
                        /** Format: text */
                        user_id: string;
                    };
                    "text/csv": {
                        /** Format: text */
                        user_id: string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/rpc/commit_temp_data": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Commits temporary data to permanent tables and handles upload options */
        get: {
            parameters: {
                query: {
                    p_suffix: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        /** Commits temporary data to permanent tables and handles upload options */
        post: {
            parameters: {
                query?: never;
                header?: {
                    /** @description Preference */
                    Prefer?: "params=single-object";
                };
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: text */
                        p_suffix: string;
                    };
                    "application/vnd.pgrst.object+json;nulls=stripped": {
                        /** Format: text */
                        p_suffix: string;
                    };
                    "application/vnd.pgrst.object+json": {
                        /** Format: text */
                        p_suffix: string;
                    };
                    "text/csv": {
                        /** Format: text */
                        p_suffix: string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        mentioned_users: {
            /**
             * Format: text
             * @description Note:
             *     This is a Primary Key.<pk/>
             */
            user_id: string;
            /** Format: text */
            name: string;
            /** Format: text */
            screen_name: string;
            /** Format: timestamp with time zone */
            updated_at: string;
        };
        tweet_urls: {
            /**
             * Format: bigint
             * @description Note:
             *     This is a Primary Key.<pk/>
             */
            id: number;
            /** Format: text */
            url: string;
            /** Format: text */
            expanded_url: string;
            /** Format: text */
            display_url: string;
            /**
             * Format: text
             * @description Note:
             *     This is a Foreign Key to `tweets.tweet_id`.<fk table='tweets' column='tweet_id'/>
             */
            tweet_id: string;
        };
        followers: {
            /**
             * Format: bigint
             * @description Note:
             *     This is a Primary Key.<pk/>
             */
            id: number;
            /**
             * Format: text
             * @description Note:
             *     This is a Foreign Key to `account.account_id`.<fk table='account' column='account_id'/>
             */
            account_id: string;
            /** Format: text */
            follower_account_id: string;
            /**
             * Format: bigint
             * @description Note:
             *     This is a Foreign Key to `archive_upload.id`.<fk table='archive_upload' column='id'/>
             */
            archive_upload_id: number;
        };
        /** @description Stores upload options for each archive upload */
        archive_upload: {
            /**
             * Format: bigint
             * @description Note:
             *     This is a Primary Key.<pk/>
             */
            id: number;
            /**
             * Format: text
             * @description Note:
             *     This is a Foreign Key to `account.account_id`.<fk table='account' column='account_id'/>
             */
            account_id: string;
            /** Format: timestamp with time zone */
            archive_at: string;
            /**
             * Format: timestamp with time zone
             * @default CURRENT_TIMESTAMP
             */
            created_at: string;
            /**
             * Format: boolean
             * @default false
             */
            keep_private: boolean;
            /**
             * Format: boolean
             * @default true
             */
            upload_likes: boolean;
            /** Format: date */
            start_date?: string;
            /** Format: date */
            end_date?: string;
            /**
             * Format: public.upload_phase_enum
             * @default uploading
             * @enum {string}
             */
            upload_phase: "uploading" | "completed" | "failed";
        };
        tweet_replies_view: {
            /** Format: text */
            reply_to_tweet_id?: string;
            /** Format: text */
            reply_to_user_id?: string;
        };
        liked_tweets: {
            /**
             * Format: text
             * @description Note:
             *     This is a Primary Key.<pk/>
             */
            tweet_id: string;
            /** Format: text */
            full_text: string;
            /** Format: tsvector */
            fts?: string;
        };
        following: {
            /**
             * Format: bigint
             * @description Note:
             *     This is a Primary Key.<pk/>
             */
            id: number;
            /**
             * Format: text
             * @description Note:
             *     This is a Foreign Key to `account.account_id`.<fk table='account' column='account_id'/>
             */
            account_id: string;
            /** Format: text */
            following_account_id: string;
            /**
             * Format: bigint
             * @description Note:
             *     This is a Foreign Key to `archive_upload.id`.<fk table='archive_upload' column='id'/>
             */
            archive_upload_id: number;
        };
        account_activity_summary: {
            /**
             * Format: text
             * @description Note:
             *     This is a Primary Key.<pk/>
             */
            account_id?: string;
            /** Format: text */
            username?: string;
            /** Format: integer */
            num_tweets?: number;
            /** Format: integer */
            num_followers?: number;
            /** Format: bigint */
            total_likes?: number;
            /** Format: bigint */
            total_mentions?: number;
            /** Format: json */
            mentioned_accounts?: Record<string, never>;
            /** Format: json */
            most_retweeted_tweets?: Record<string, never>;
            /** Format: json */
            most_favorited_tweets?: Record<string, never>;
            /** Format: timestamp with time zone */
            last_updated?: string;
        };
        tweet_media: {
            /**
             * Format: bigint
             * @description Note:
             *     This is a Primary Key.<pk/>
             */
            media_id: number;
            /**
             * Format: text
             * @description Note:
             *     This is a Foreign Key to `tweets.tweet_id`.<fk table='tweets' column='tweet_id'/>
             */
            tweet_id: string;
            /** Format: text */
            media_url: string;
            /** Format: text */
            media_type: string;
            /** Format: integer */
            width: number;
            /** Format: integer */
            height: number;
            /**
             * Format: bigint
             * @description Note:
             *     This is a Foreign Key to `archive_upload.id`.<fk table='archive_upload' column='id'/>
             */
            archive_upload_id: number;
        };
        tweets_w_conversation_id: {
            /**
             * Format: text
             * @description Note:
             *     This is a Primary Key.<pk/>
             */
            tweet_id?: string;
            /**
             * Format: text
             * @description Note:
             *     This is a Foreign Key to `account.account_id`.<fk table='account' column='account_id'/>
             */
            account_id?: string;
            /** Format: timestamp with time zone */
            created_at?: string;
            /** Format: text */
            full_text?: string;
            /** Format: integer */
            retweet_count?: number;
            /** Format: integer */
            favorite_count?: number;
            /** Format: text */
            reply_to_tweet_id?: string;
            /** Format: text */
            reply_to_user_id?: string;
            /** Format: text */
            reply_to_username?: string;
            /**
             * Format: bigint
             * @description Note:
             *     This is a Foreign Key to `archive_upload.id`.<fk table='archive_upload' column='id'/>
             */
            archive_upload_id?: number;
            /** Format: tsvector */
            fts?: string;
            /** Format: text */
            conversation_id?: string;
        };
        global_activity_summary: {
            /** Format: bigint */
            total_accounts?: number;
            /** Format: bigint */
            total_tweets?: number;
            /** Format: bigint */
            total_likes?: number;
            /** Format: bigint */
            total_user_mentions?: number;
            /** Format: json */
            top_mentioned_users?: Record<string, never>;
            /** Format: json */
            top_accounts_with_followers?: Record<string, never>;
            /** Format: timestamp with time zone */
            last_updated?: string;
        };
        account: {
            /**
             * Format: text
             * @description Note:
             *     This is a Primary Key.<pk/>
             */
            account_id: string;
            /** Format: text */
            created_via: string;
            /** Format: text */
            username: string;
            /** Format: timestamp with time zone */
            created_at: string;
            /** Format: text */
            account_display_name: string;
            /** Format: integer */
            num_tweets?: number;
            /** Format: integer */
            num_following?: number;
            /** Format: integer */
            num_followers?: number;
            /** Format: integer */
            num_likes?: number;
        };
        profile: {
            /**
             * Format: bigint
             * @description Note:
             *     This is a Primary Key.<pk/>
             */
            id: number;
            /**
             * Format: text
             * @description Note:
             *     This is a Foreign Key to `account.account_id`.<fk table='account' column='account_id'/>
             */
            account_id: string;
            /** Format: text */
            bio?: string;
            /** Format: text */
            website?: string;
            /** Format: text */
            location?: string;
            /** Format: text */
            avatar_media_url?: string;
            /** Format: text */
            header_media_url?: string;
            /**
             * Format: bigint
             * @description Note:
             *     This is a Foreign Key to `archive_upload.id`.<fk table='archive_upload' column='id'/>
             */
            archive_upload_id: number;
        };
        tweets: {
            /**
             * Format: text
             * @description Note:
             *     This is a Primary Key.<pk/>
             */
            tweet_id: string;
            /**
             * Format: text
             * @description Note:
             *     This is a Foreign Key to `account.account_id`.<fk table='account' column='account_id'/>
             */
            account_id: string;
            /** Format: timestamp with time zone */
            created_at: string;
            /** Format: text */
            full_text: string;
            /** Format: integer */
            retweet_count: number;
            /** Format: integer */
            favorite_count: number;
            /** Format: text */
            reply_to_tweet_id?: string;
            /** Format: text */
            reply_to_user_id?: string;
            /** Format: text */
            reply_to_username?: string;
            /**
             * Format: bigint
             * @description Note:
             *     This is a Foreign Key to `archive_upload.id`.<fk table='archive_upload' column='id'/>
             */
            archive_upload_id: number;
            /** Format: tsvector */
            fts?: string;
        };
        likes: {
            /**
             * Format: bigint
             * @description Note:
             *     This is a Primary Key.<pk/>
             */
            id: number;
            /**
             * Format: text
             * @description Note:
             *     This is a Foreign Key to `account.account_id`.<fk table='account' column='account_id'/>
             */
            account_id: string;
            /**
             * Format: text
             * @description Note:
             *     This is a Foreign Key to `liked_tweets.tweet_id`.<fk table='liked_tweets' column='tweet_id'/>
             */
            liked_tweet_id: string;
            /**
             * Format: bigint
             * @description Note:
             *     This is a Foreign Key to `archive_upload.id`.<fk table='archive_upload' column='id'/>
             */
            archive_upload_id: number;
        };
        user_mentions: {
            /**
             * Format: bigint
             * @description Note:
             *     This is a Primary Key.<pk/>
             */
            id: number;
            /**
             * Format: text
             * @description Note:
             *     This is a Foreign Key to `mentioned_users.user_id`.<fk table='mentioned_users' column='user_id'/>
             */
            mentioned_user_id: string;
            /**
             * Format: text
             * @description Note:
             *     This is a Foreign Key to `tweets.tweet_id`.<fk table='tweets' column='tweet_id'/>
             */
            tweet_id: string;
        };
        conversations: {
            /**
             * Format: text
             * @description Note:
             *     This is a Primary Key.<pk/>
             *     This is a Foreign Key to `tweets.tweet_id`.<fk table='tweets' column='tweet_id'/>
             */
            tweet_id: string;
            /** Format: text */
            conversation_id?: string;
        };
    };
    responses: never;
    parameters: {
        /** @description Preference */
        preferParams: "params=single-object";
        /** @description Preference */
        preferReturn: "return=representation" | "return=minimal" | "return=none";
        /** @description Preference */
        preferCount: "count=none";
        /** @description Preference */
        preferPost: "return=representation" | "return=minimal" | "return=none" | "resolution=ignore-duplicates" | "resolution=merge-duplicates";
        /** @description Filtering Columns */
        select: string;
        /** @description On Conflict */
        on_conflict: string;
        /** @description Ordering */
        order: string;
        /** @description Limiting and Pagination */
        range: string;
        /** @description Limiting and Pagination */
        rangeUnit: string;
        /** @description Limiting and Pagination */
        offset: string;
        /** @description Limiting and Pagination */
        limit: string;
        "rowFilter.mentioned_users.user_id": string;
        "rowFilter.mentioned_users.name": string;
        "rowFilter.mentioned_users.screen_name": string;
        "rowFilter.mentioned_users.updated_at": string;
        "rowFilter.tweet_urls.id": string;
        "rowFilter.tweet_urls.url": string;
        "rowFilter.tweet_urls.expanded_url": string;
        "rowFilter.tweet_urls.display_url": string;
        "rowFilter.tweet_urls.tweet_id": string;
        "rowFilter.followers.id": string;
        "rowFilter.followers.account_id": string;
        "rowFilter.followers.follower_account_id": string;
        "rowFilter.followers.archive_upload_id": string;
        "rowFilter.archive_upload.id": string;
        "rowFilter.archive_upload.account_id": string;
        "rowFilter.archive_upload.archive_at": string;
        "rowFilter.archive_upload.created_at": string;
        "rowFilter.archive_upload.keep_private": string;
        "rowFilter.archive_upload.upload_likes": string;
        "rowFilter.archive_upload.start_date": string;
        "rowFilter.archive_upload.end_date": string;
        "rowFilter.archive_upload.upload_phase": string;
        "rowFilter.tweet_replies_view.reply_to_tweet_id": string;
        "rowFilter.tweet_replies_view.reply_to_user_id": string;
        "rowFilter.liked_tweets.tweet_id": string;
        "rowFilter.liked_tweets.full_text": string;
        "rowFilter.liked_tweets.fts": string;
        "rowFilter.following.id": string;
        "rowFilter.following.account_id": string;
        "rowFilter.following.following_account_id": string;
        "rowFilter.following.archive_upload_id": string;
        "rowFilter.account_activity_summary.account_id": string;
        "rowFilter.account_activity_summary.username": string;
        "rowFilter.account_activity_summary.num_tweets": string;
        "rowFilter.account_activity_summary.num_followers": string;
        "rowFilter.account_activity_summary.total_likes": string;
        "rowFilter.account_activity_summary.total_mentions": string;
        "rowFilter.account_activity_summary.mentioned_accounts": string;
        "rowFilter.account_activity_summary.most_retweeted_tweets": string;
        "rowFilter.account_activity_summary.most_favorited_tweets": string;
        "rowFilter.account_activity_summary.last_updated": string;
        "rowFilter.tweet_media.media_id": string;
        "rowFilter.tweet_media.tweet_id": string;
        "rowFilter.tweet_media.media_url": string;
        "rowFilter.tweet_media.media_type": string;
        "rowFilter.tweet_media.width": string;
        "rowFilter.tweet_media.height": string;
        "rowFilter.tweet_media.archive_upload_id": string;
        "rowFilter.tweets_w_conversation_id.tweet_id": string;
        "rowFilter.tweets_w_conversation_id.account_id": string;
        "rowFilter.tweets_w_conversation_id.created_at": string;
        "rowFilter.tweets_w_conversation_id.full_text": string;
        "rowFilter.tweets_w_conversation_id.retweet_count": string;
        "rowFilter.tweets_w_conversation_id.favorite_count": string;
        "rowFilter.tweets_w_conversation_id.reply_to_tweet_id": string;
        "rowFilter.tweets_w_conversation_id.reply_to_user_id": string;
        "rowFilter.tweets_w_conversation_id.reply_to_username": string;
        "rowFilter.tweets_w_conversation_id.archive_upload_id": string;
        "rowFilter.tweets_w_conversation_id.fts": string;
        "rowFilter.tweets_w_conversation_id.conversation_id": string;
        "rowFilter.global_activity_summary.total_accounts": string;
        "rowFilter.global_activity_summary.total_tweets": string;
        "rowFilter.global_activity_summary.total_likes": string;
        "rowFilter.global_activity_summary.total_user_mentions": string;
        "rowFilter.global_activity_summary.top_mentioned_users": string;
        "rowFilter.global_activity_summary.top_accounts_with_followers": string;
        "rowFilter.global_activity_summary.last_updated": string;
        "rowFilter.account.account_id": string;
        "rowFilter.account.created_via": string;
        "rowFilter.account.username": string;
        "rowFilter.account.created_at": string;
        "rowFilter.account.account_display_name": string;
        "rowFilter.account.num_tweets": string;
        "rowFilter.account.num_following": string;
        "rowFilter.account.num_followers": string;
        "rowFilter.account.num_likes": string;
        "rowFilter.profile.id": string;
        "rowFilter.profile.account_id": string;
        "rowFilter.profile.bio": string;
        "rowFilter.profile.website": string;
        "rowFilter.profile.location": string;
        "rowFilter.profile.avatar_media_url": string;
        "rowFilter.profile.header_media_url": string;
        "rowFilter.profile.archive_upload_id": string;
        "rowFilter.tweets.tweet_id": string;
        "rowFilter.tweets.account_id": string;
        "rowFilter.tweets.created_at": string;
        "rowFilter.tweets.full_text": string;
        "rowFilter.tweets.retweet_count": string;
        "rowFilter.tweets.favorite_count": string;
        "rowFilter.tweets.reply_to_tweet_id": string;
        "rowFilter.tweets.reply_to_user_id": string;
        "rowFilter.tweets.reply_to_username": string;
        "rowFilter.tweets.archive_upload_id": string;
        "rowFilter.tweets.fts": string;
        "rowFilter.likes.id": string;
        "rowFilter.likes.account_id": string;
        "rowFilter.likes.liked_tweet_id": string;
        "rowFilter.likes.archive_upload_id": string;
        "rowFilter.user_mentions.id": string;
        "rowFilter.user_mentions.mentioned_user_id": string;
        "rowFilter.user_mentions.tweet_id": string;
        "rowFilter.conversations.tweet_id": string;
        "rowFilter.conversations.conversation_id": string;
    };
    requestBodies: {
        /** @description mentioned_users */
        "body.mentioned_users": {
            content: {
                "application/json": components["schemas"]["mentioned_users"];
                "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["mentioned_users"];
                "application/vnd.pgrst.object+json": components["schemas"]["mentioned_users"];
                "text/csv": components["schemas"]["mentioned_users"];
            };
        };
        /** @description tweet_urls */
        "body.tweet_urls": {
            content: {
                "application/json": components["schemas"]["tweet_urls"];
                "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["tweet_urls"];
                "application/vnd.pgrst.object+json": components["schemas"]["tweet_urls"];
                "text/csv": components["schemas"]["tweet_urls"];
            };
        };
        /** @description followers */
        "body.followers": {
            content: {
                "application/json": components["schemas"]["followers"];
                "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["followers"];
                "application/vnd.pgrst.object+json": components["schemas"]["followers"];
                "text/csv": components["schemas"]["followers"];
            };
        };
        /** @description archive_upload */
        "body.archive_upload": {
            content: {
                "application/json": components["schemas"]["archive_upload"];
                "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["archive_upload"];
                "application/vnd.pgrst.object+json": components["schemas"]["archive_upload"];
                "text/csv": components["schemas"]["archive_upload"];
            };
        };
        /** @description tweet_replies_view */
        "body.tweet_replies_view": {
            content: {
                "application/json": components["schemas"]["tweet_replies_view"];
                "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["tweet_replies_view"];
                "application/vnd.pgrst.object+json": components["schemas"]["tweet_replies_view"];
                "text/csv": components["schemas"]["tweet_replies_view"];
            };
        };
        /** @description liked_tweets */
        "body.liked_tweets": {
            content: {
                "application/json": components["schemas"]["liked_tweets"];
                "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["liked_tweets"];
                "application/vnd.pgrst.object+json": components["schemas"]["liked_tweets"];
                "text/csv": components["schemas"]["liked_tweets"];
            };
        };
        /** @description following */
        "body.following": {
            content: {
                "application/json": components["schemas"]["following"];
                "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["following"];
                "application/vnd.pgrst.object+json": components["schemas"]["following"];
                "text/csv": components["schemas"]["following"];
            };
        };
        /** @description account_activity_summary */
        "body.account_activity_summary": {
            content: {
                "application/json": components["schemas"]["account_activity_summary"];
                "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["account_activity_summary"];
                "application/vnd.pgrst.object+json": components["schemas"]["account_activity_summary"];
                "text/csv": components["schemas"]["account_activity_summary"];
            };
        };
        /** @description tweet_media */
        "body.tweet_media": {
            content: {
                "application/json": components["schemas"]["tweet_media"];
                "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["tweet_media"];
                "application/vnd.pgrst.object+json": components["schemas"]["tweet_media"];
                "text/csv": components["schemas"]["tweet_media"];
            };
        };
        /** @description tweets_w_conversation_id */
        "body.tweets_w_conversation_id": {
            content: {
                "application/json": components["schemas"]["tweets_w_conversation_id"];
                "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["tweets_w_conversation_id"];
                "application/vnd.pgrst.object+json": components["schemas"]["tweets_w_conversation_id"];
                "text/csv": components["schemas"]["tweets_w_conversation_id"];
            };
        };
        /** @description global_activity_summary */
        "body.global_activity_summary": {
            content: {
                "application/json": components["schemas"]["global_activity_summary"];
                "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["global_activity_summary"];
                "application/vnd.pgrst.object+json": components["schemas"]["global_activity_summary"];
                "text/csv": components["schemas"]["global_activity_summary"];
            };
        };
        /** @description account */
        "body.account": {
            content: {
                "application/json": components["schemas"]["account"];
                "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["account"];
                "application/vnd.pgrst.object+json": components["schemas"]["account"];
                "text/csv": components["schemas"]["account"];
            };
        };
        /** @description profile */
        "body.profile": {
            content: {
                "application/json": components["schemas"]["profile"];
                "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["profile"];
                "application/vnd.pgrst.object+json": components["schemas"]["profile"];
                "text/csv": components["schemas"]["profile"];
            };
        };
        /** @description tweets */
        "body.tweets": {
            content: {
                "application/json": components["schemas"]["tweets"];
                "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["tweets"];
                "application/vnd.pgrst.object+json": components["schemas"]["tweets"];
                "text/csv": components["schemas"]["tweets"];
            };
        };
        /** @description likes */
        "body.likes": {
            content: {
                "application/json": components["schemas"]["likes"];
                "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["likes"];
                "application/vnd.pgrst.object+json": components["schemas"]["likes"];
                "text/csv": components["schemas"]["likes"];
            };
        };
        /** @description user_mentions */
        "body.user_mentions": {
            content: {
                "application/json": components["schemas"]["user_mentions"];
                "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["user_mentions"];
                "application/vnd.pgrst.object+json": components["schemas"]["user_mentions"];
                "text/csv": components["schemas"]["user_mentions"];
            };
        };
        /** @description conversations */
        "body.conversations": {
            content: {
                "application/json": components["schemas"]["conversations"];
                "application/vnd.pgrst.object+json;nulls=stripped": components["schemas"]["conversations"];
                "application/vnd.pgrst.object+json": components["schemas"]["conversations"];
                "text/csv": components["schemas"]["conversations"];
            };
        };
    };
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
